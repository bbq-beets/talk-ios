# SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors
# SPDX-License-Identifier: MIT

name: Build main target

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  WORKSPACE: NextcloudTalk.xcworkspace
  XCODE: 26.0-beta
  DESTINATION: platform=iOS Simulator,name=iPhone 26,OS=26.0-beta
  SCHEME: NextcloudTalk

jobs:
  build:
    name: Build
    runs-on: macos-15

    steps:
    - name: Checkout app
      uses: actions/checkout@v4
      with:
        submodules: true

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE }}

    - run: xcodebuild -scheme '${{ env.SCHEME }}' -showdestinations
  
    - uses: actions/cache@v4
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Setup Cocoapods
      uses: maxim-lobanov/setup-cocoapods@v1.4.0
      with:
        version: latest      

    - name: Set up dependencies talk-ios
      run: |
        pod install

    - name: Build NextcloudTalk iOS for testing
      run: |
        set -o pipefail && \
        xcodebuild build-for-testing \
        -workspace '${{ env.WORKSPACE }}' \
        -scheme '${{ env.SCHEME }}' \
        -destination '${{ env.DESTINATION }}' \
        -derivedDataPath 'DerivedData' \
        | xcbeautify --quieter

    - name: Upload test build
      uses: actions/upload-artifact@v4
      with:
        name: Products
        path: DerivedData/Build/Products
        retention-days: 4

  test:
    name: Test
    runs-on: macos-15
    needs: [build]

    strategy:
      fail-fast: false
      matrix:
        # Test with stable23 as well to find regressions in older versions
        configs: [
          { talkbranch: 'stable23', serverbranch: 'stable23', phpversion: '8.0' },
          { talkbranch: 'stable29', serverbranch: 'stable29', phpversion: '8.3' },
          { talkbranch: 'stable30', serverbranch: 'stable30', phpversion: '8.3' },
          { talkbranch: 'stable31', serverbranch: 'stable31', phpversion: '8.3' },
          { talkbranch: 'main', serverbranch: 'master', phpversion: '8.3' }
        ]

    steps:
    - name: Print out instance name  
      run: |
        INSTANCE_NAME=$(ls /usr/local/opt/runner/settings/instancename)
        echo "Instance name: $INSTANCE_NAME"
        echo "### $INSTANCE_NAME" >> $GITHUB_STEP_SUMMARY

    - name: Checkout app
      uses: actions/checkout@v4
      with:
        submodules: true

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE}}

    - name: Set up php ${{ matrix.configs.phpversion }}
      uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
      with:
        php-version: ${{ matrix.configs.phpversion }}
        # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
        extensions: apcu, bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, pgsql, pdo_pgsql
        coverage: none
        ini-file: development
        # Temporary workaround for missing pcntl_* in PHP 8.3: ini-values: apc.enable_cli=on
        ini-values: apc.enable_cli=on, disable_functions=
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout server
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        submodules: true
        repository: nextcloud/server
        path: server
        ref: ${{ matrix.configs.serverbranch }}

    - name: Checkout Talk
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: nextcloud/spreed
        path: server/apps/spreed
        ref: ${{ matrix.configs.talkbranch }}

    - name: Set up production dependencies
      working-directory: server/apps/spreed
      run: composer i --no-dev 

    - name: Set up Nextcloud
      run: |
        mkdir server/data
        ./server/occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
        ./server/occ config:system:set hashing_default_password --value=true --type=boolean
        ./server/occ config:system:set auth.bruteforce.protection.enabled --value false --type bool
        ./server/occ config:system:set ratelimit.protection.enabled --value false --type bool
        ./server/occ config:system:set memcache.local --value='\OC\Memcache\APCu'
        ./server/occ config:system:set memcache.distributed --value='\OC\Memcache\APCu'
        ./server/occ app:enable --force spreed
        ./server/occ background:cron
        OC_PASS=alice ./server/occ user:add --password-from-env alice
        PHP_CLI_SERVER_WORKERS=10 php -S localhost:8080 -t server/ &

    - name: Download test-build
      uses: actions/download-artifact@v4
      with:
        name: Products

    - name: Check status.php
      run: curl -s --retry 5 --retry-delay 5 --retry-all-errors http://localhost:8080/status.php || true

    - name: Setup test-specific rooms
      run: |
        source ./ci-setup-rooms.sh
 
    - name: Check memory pressure
      run: sysctl vm.swapusage

    #- uses: paveliak/profile-it@main
    #  with:
    #    name: ${{ matrix.configs.talkbranch }}-trace

    - name: Test NextcloudTalk iOS
      run: |
        set -o pipefail && \
        xcodebuild test-without-building \
        -xctestrun $(find . -type f -name '*.xctestrun') \
        -destination '${{ env.DESTINATION }}' \
        -derivedDataPath 'DerivedData' \
        -test-iterations 3 \
        -retry-tests-on-failure \
        -resultBundlePath 'testResult.xcresult'

    - name: Check memory pressure
      if: always()
      run: sysctl vm.swapusage
      
    - name: Dump CoreSimulator logs
      if: always()
      run: find ~/Library/Logs/CoreSimulator -type f
      
    - name: Dump CoreSimulator logs
      if: always()
      run: ls -al ~/Library/Logs/CoreSimulator
      
    - name: Dump CoreSimulator logs
      if: always()
      run: cat ~/Library/Logs/CoreSimulator/CoreSimulator.log

    - name: Dump CoreSimulator logs
      if: always()
      run: cat ~/Library/Logs/CoreSimulator/*/system.log

    - name: Dump CoreSimulator logs
      if: always()
      run: xcrun simctl list devices -j
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: testResults-${{ matrix.configs.talkbranch }}.xcresult
        path: 'testResult.xcresult'

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [test]

    if: always()

    name: build-and-test-summary

    steps:
      - name: Summary status
        run: if ${{ needs.test.result != 'success' }}; then exit 1; fi
